package a;
import java.util.*;
/**
 *
 * @author Estudiante
 */
 


public class ArrayList <E> implements Iterable<E>   { 

    public static class estudiante{ //Clase auxiliar de apoyo
    String nombre;
    int id;
    estudiante(String name, int ide){
        this.id=ide;
        this.nombre=name;
    }
}
      
    
    private static final int DEFAULT_CAPACITY = 10;
	private int theSize;
	private E[] theItems;
	
	
	
	public ArrayList() {
	
		clear();
	}
    @Override
	public String toString(){
		String result = "[";
		for (int i=0; i<theSize-1; i++)
			result += theItems[i].toString() + ",";
		if(theSize>0){
			result += theItems[theSize-1].toString();
		}
		return result + "]";
	}
        public boolean add(E dato){

	add(size(),dato);
	
	return true;
}

public void add(int idx, E dato){
	
	if (theItems.length == size())
		ensureCapacity( size()*2+1);
	
	for (int i = theSize; i>idx; i--)
		{theItems[i] = theItems[i-1];}
	
	theItems[idx]=dato;
	theSize++;	
}
	public void clear() {
		
		theSize = 0;
		ensureCapacity( DEFAULT_CAPACITY );

	}
        
        public E get(int idx){
		
		if (idx<0 || idx>=size())
			throw new ArrayIndexOutOfBoundsException("Index"
					+ idx+ ";size" + size());
		return theItems[idx];
	}
	
	public E set(int idx, E newVal){
		if (idx<0 || idx>=size())
			throw new ArrayIndexOutOfBoundsException("Index"
					+ idx+ ";size" + size());
		E old = theItems[idx];
		theItems[idx]=newVal;
		return old;
		
		
	}
        
        @SuppressWarnings("unchecked")
public void ensureCapacity(int newCapacity){
	if (newCapacity < theSize)
		return;
	E [] old = theItems;
	theItems = (E[]) new Object [newCapacity];
	for( int i =0; i< size(); i++)
		theItems[i]= old[i];
}
public int size(){
	//theSize= theItems.length;
	return theSize;
}
	public java.util.Iterator<E> iterator()
	{return new ArrayListIterator();}
        
        public E remove(int idx){
	
	E erased= theItems[idx];
	
	for (int i =idx; i< size()-1; i++){
		theItems[i]=theItems[i+1];
	}
	theSize--;
	return erased;
	
}
	private class ArrayListIterator implements java.util.Iterator<E>{
		
		private int current=0;
		
		public boolean hasNext()
		{return current < size();}
		
		public E next(){
			if (!hasNext())
				throw new java.util.NoSuchElementException();
			return theItems[current++];
		}
		public void remove()
		{ ArrayList.this.remove(--current);}

		
	
	}
    public static void main(String[] args) {
       
        Scanner scan=new Scanner(System.in);
        
        ArrayList<estudiante> lista= new ArrayList<estudiante>();
       
        String input[];
        input=scan.nextLine().split(" ");
        int casos=Integer.parseInt(input[0]);
        int cantCubi;
        int cantCom;
        for(int i=0;i<casos;i++){
            System.out.println("Caso #"+i+1);
            input=scan.nextLine().split(" ");
            cantCubi=Integer.parseInt(input[0]);
            input=scan.nextLine().split(" ");
            int[] capacidadCubi; 
            for(int j=0;j<cantCubi;j++){
                
            }
            input=scan.nextLine().split(" ");
            cantCom=Integer.parseInt(input[0]);
           
            for (int k=0;k<cantCom;k++){
                if (input[0].compareTo("ingresar")==0){
                    estudiante nuevo=new estudiante(input[1],Integer.parseInt(input[2]));
                }else if(input[0].compareTo("salir")==0){
                    
                }
            }  
        
        
        }
       

    }
    
    
    
    
}
